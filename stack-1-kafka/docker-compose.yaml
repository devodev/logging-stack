version: "3.7"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.0
    expose:
      - "2181"
    networks:
      - kafka-in
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
  kafka:
    image: confluentinc/cp-kafka:5.5.0
    expose:
      - "9092"
    depends_on:
      - zookeeper
    networks:
      - kafka-in
      - kafka-out
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://:9092
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      # Needed for kafka-topic-ui
      KAFKA_CONSUMER_REQUEST_TIMEOUT_MS: 30000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  kafka-manager:
    image: kafkamanager/kafka-manager:3.0.0.4
    ports:
      - "9000:9000"
    depends_on:
      - zookeeper
      - kafka
    networks:
      - kafka-in
      - kafka-out
    environment:
      ZK_HOSTS: zookeeper:2181
  kafka-schema-registry:
    image: confluentinc/cp-schema-registry:5.5.0
    expose:
      - "8081"
    restart: on-failure
    depends_on:
      - zookeeper
      - kafka
    networks:
      - kafka-in
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092
      # SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
      SCHEMA_REGISTRY_HOST_NAME: kafka-schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://kafka-schema-registry:8081
  kafka-rest:
    image: confluentinc/cp-kafka-rest:5.5.0
    expose:
      - "8082"
    depends_on:
      - zookeeper
      - kafka
    networks:
      - kafka-in
    environment:
      KAFKA_REST_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_REST_HOST_NAME: kafka-rest
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082
      KAFKA_REST_SCHEMA_REGISTRY_URL: kafka-schema-registry:8081
  kafka-topics-ui:
    image: landoop/kafka-topics-ui:0.9.4
    ports:
      - "8000:8000"
    depends_on:
      - kafka-rest
    networks:
      - kafka-in
      - kafka-out
    environment:
      KAFKA_REST_PROXY_URL: http://kafka-rest:8082
      PROXY: "true"
  kafka-exporter:
    image: danielqsj/kafka-exporter:v1.2.0
    expose:
      - "9308"
    restart: on-failure
    depends_on:
      - kafka
    networks:
      - kafka-in
networks:
  kafka-in:
    name: kafka-in
    driver: bridge
  kafka-out:
    name: kafka-out
    driver: overlay
